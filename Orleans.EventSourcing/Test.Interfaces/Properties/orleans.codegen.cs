//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace Test.Interfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using System.Reflection;
    using Orleans.Serialization;
    using Test.Interfaces;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PersonFactory
    {
        

                        public static IPerson GetGrain(long primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPerson), -627797884, primaryKey));
                        }

                        public static IPerson GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPerson), -627797884, primaryKey, grainClassNamePrefix));
                        }

                        public static IPerson GetGrain(Guid primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPerson), -627797884, primaryKey));
                        }

                        public static IPerson GetGrain(Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPerson), -627797884, primaryKey, grainClassNamePrefix));
                        }

            public static IPerson Cast(IAddressable grainRef)
            {
                
                return PersonReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [Orleans.GrainReferenceAttribute("Test.Interfaces.IPerson")]
        internal class PersonReference : Orleans.GrainReference, IPerson, Orleans.IAddressable
        {
            

            public static IPerson Cast(IAddressable grainRef)
            {
                
                return (IPerson) GrainReference.CastInternal(typeof(IPerson), (GrainReference gr) => { return new PersonReference(gr);}, grainRef, -627797884);
            }

                protected override int InterfaceId { get { return -627797884; } }

                public override bool IsCompatible(int interfaceId) { return interfaceId == this.InterfaceId; }

                protected override string InterfaceName { get { return "Test.Interfaces.IPerson"; } }

                protected override string GetMethodName(int interfaceId, int methodId) { return PersonMethodInvoker.GetMethodName(interfaceId, methodId); }

            public async System.Threading.Tasks.Task<PersonProperties> GetProperties() 
            { 
                return await base.InvokeMethodAsync<PersonProperties>( -606142484, new object[]{}, TimeSpan.Zero);
            }
            
            
            protected internal PersonReference(GrainReference reference) : 
                    base(reference)
            {
            }
            
            public System.Threading.Tasks.Task<string> FirstName
            {
                get
                {

                return base.InvokeMethodAsync<System.String>(-1287040473, new object[] {}, TimeSpan.Zero , options: InvokeMethodOptions.ReadOnly);
                }
            }
            
            public System.Threading.Tasks.Task<string> LastName
            {
                get
                {

                return base.InvokeMethodAsync<System.String>(60938995, new object[] {}, TimeSpan.Zero , options: InvokeMethodOptions.ReadOnly);
                }
            }
            
            public System.Threading.Tasks.Task<Test.Interfaces.GenderType> Gender
            {
                get
                {

                return base.InvokeMethodAsync<Test.Interfaces.GenderType>(871790933, new object[] {}, TimeSpan.Zero , options: InvokeMethodOptions.ReadOnly);
                }
            }
            
            public System.Threading.Tasks.Task<bool> IsMarried
            {
                get
                {

                return base.InvokeMethodAsync<System.Boolean>(1174613038, new object[] {}, TimeSpan.Zero , options: InvokeMethodOptions.ReadOnly);
                }
            }
            
            [Orleans.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PersonReference input = ((PersonReference)(original));
                return ((PersonReference)(GrainReference.CopyGrainReference(input)));
            }
            
            [Orleans.SerializerMethodAttribute()]
            public static void _Serializer(object original, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PersonReference input = ((PersonReference)(original));
                GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [Orleans.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PersonReference.Cast(((Orleans.GrainReference)(GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public System.Threading.Tasks.Task Register(Test.Interfaces.PersonalAttributes person)
            {

                return base.InvokeMethodAsync<object>(-1544510960, new object[] {person}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Marry(System.Guid spouse, string newLastName)
            {

                return base.InvokeMethodAsync<object>(-516276551, new object[] {spouse, newLastName}, TimeSpan.Zero );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [Orleans.MethodInvokerAttribute("Test.Interfaces.IPerson", -627797884)]
    internal class PersonMethodInvoker : IGrainMethodInvoker
    {
        
        public int InterfaceId
        {
            get
            {
                return -627797884;
            }
        }
        
        public async System.Threading.Tasks.Task<Object> Invoke(IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {
                if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -627797884:  // IPerson
                        switch (methodId)
                        {
                            case -1544510960: 
                                await ((IPerson)grain).Register((PersonalAttributes)arguments[0]);
                              return true;
                            case -516276551: 
                                await ((IPerson)grain).Marry((Guid)arguments[0], (String)arguments[1]);
                              return true;
                            case -1287040473: 
                                return await ((IPerson)grain).FirstName;
                            case 60938995: 
                                return await ((IPerson)grain).LastName;
                            case 871790933: 
                                return await ((IPerson)grain).Gender;
                            case 1174613038: 
                                return await ((IPerson)grain).IsMarried;
                            case -606142484: return ((IPerson)grain).GetProperties();
                                                        default: 
                                throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -627797884:  // IPerson
                    switch (methodId)
                    {
                        case -1544510960:
                            return "Register";
                    case -516276551:
                            return "Marry";
                    case -1287040473:
                            return "get_FirstName";
                    case 60938995:
                            return "get_LastName";
                    case 871790933:
                            return "get_Gender";
                    case 1174613038:
                            return "get_IsMarried";
                    case -606142484:
                            return "GetProperties";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [System.SerializableAttribute()]
    public static class PersonExtensionMethods
    {
        
static public System.Threading.Tasks.Task<PersonProperties> GetProperties(this IPerson interfaceData) 
            { 
                PersonFactory.PersonReference gref = interfaceData as PersonFactory.PersonReference;
                 return gref.GetProperties();
            }
            
    }
    
    [Serializable()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PersonProperties
    {
        

            public String FirstName { get; set; }
            public String LastName { get; set; }
            public GenderType Gender { get; set; }
            public Boolean IsMarried { get; set; }
            public Dictionary<string,object> AsDictionary()
            {  
                var retValue = new Dictionary<string,object>();
                retValue["FirstName"] = FirstName;
                retValue["LastName"] = LastName;
                retValue["Gender"] = Gender;
                retValue["IsMarried"] = IsMarried;
                return retValue;
            }
    }
    
    [Orleans.RegisterSerializerAttribute()]
    internal class Test_Interfaces_PersonalAttributesSerialization
    {
        
        static Test_Interfaces_PersonalAttributesSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Test.Interfaces.PersonalAttributes input = ((Test.Interfaces.PersonalAttributes)(original));
            Test.Interfaces.PersonalAttributes result = new Test.Interfaces.PersonalAttributes();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.FirstName = input.FirstName;
            result.Gender = input.Gender;
            result.LastName = input.LastName;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Test.Interfaces.PersonalAttributes input = ((Test.Interfaces.PersonalAttributes)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FirstName, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Gender, stream, typeof(GenderType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LastName, stream, typeof(String));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Test.Interfaces.PersonalAttributes result = new Test.Interfaces.PersonalAttributes();
            result.FirstName = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.Gender = ((GenderType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(GenderType), stream)));
            result.LastName = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            return result;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(Test.Interfaces.PersonalAttributes), DeepCopier, Serializer, Deserializer);
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
